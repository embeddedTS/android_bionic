/****************************************************************************
 ****************************************************************************
 ***
 ***   This header was automatically generated from a Linux kernel header
 ***   of the same name, to make information necessary for userspace to
 ***   call into the kernel available to libc.  It contains only constants,
 ***   structures, and macros generated from the original header, and thus,
 ***   contains no copyrightable information.
 ***
 ***   To edit the content of this header, modify the corresponding
 ***   source file (e.g. under external/kernel-headers/original/) then
 ***   run bionic/libc/kernel/tools/update_all.py
 ***
 ***   Any manual change here will be lost the next time this script will
 ***   be run. You've been warned!
 ***
 ****************************************************************************
 ****************************************************************************/
#ifndef __LINUX_POWER_SUPPLY_H__
#define __LINUX_POWER_SUPPLY_H__
#include <linux/workqueue.h>
#include <linux/leds.h>
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
struct device;
enum {
 POWER_SUPPLY_STATUS_UNKNOWN = 0,
 POWER_SUPPLY_STATUS_CHARGING,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_STATUS_DISCHARGING,
 POWER_SUPPLY_STATUS_NOT_CHARGING,
 POWER_SUPPLY_STATUS_FULL,
};
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
enum {
 POWER_SUPPLY_CHARGE_TYPE_UNKNOWN = 0,
 POWER_SUPPLY_CHARGE_TYPE_NONE,
 POWER_SUPPLY_CHARGE_TYPE_TRICKLE,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_CHARGE_TYPE_FAST,
};
enum {
 POWER_SUPPLY_HEALTH_UNKNOWN = 0,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_HEALTH_GOOD,
 POWER_SUPPLY_HEALTH_OVERHEAT,
 POWER_SUPPLY_HEALTH_DEAD,
 POWER_SUPPLY_HEALTH_OVERVOLTAGE,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_HEALTH_UNSPEC_FAILURE,
 POWER_SUPPLY_HEALTH_COLD,
 POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE,
 POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
};
enum {
 POWER_SUPPLY_TECHNOLOGY_UNKNOWN = 0,
 POWER_SUPPLY_TECHNOLOGY_NiMH,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_TECHNOLOGY_LION,
 POWER_SUPPLY_TECHNOLOGY_LIPO,
 POWER_SUPPLY_TECHNOLOGY_LiFe,
 POWER_SUPPLY_TECHNOLOGY_NiCd,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_TECHNOLOGY_LiMn,
};
enum {
 POWER_SUPPLY_CAPACITY_LEVEL_UNKNOWN = 0,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_CAPACITY_LEVEL_CRITICAL,
 POWER_SUPPLY_CAPACITY_LEVEL_LOW,
 POWER_SUPPLY_CAPACITY_LEVEL_NORMAL,
 POWER_SUPPLY_CAPACITY_LEVEL_HIGH,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_CAPACITY_LEVEL_FULL,
};
enum {
 POWER_SUPPLY_SCOPE_UNKNOWN = 0,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_SCOPE_SYSTEM,
 POWER_SUPPLY_SCOPE_DEVICE,
};
enum power_supply_property {
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_STATUS = 0,
 POWER_SUPPLY_PROP_CHARGE_TYPE,
 POWER_SUPPLY_PROP_HEALTH,
 POWER_SUPPLY_PROP_PRESENT,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_ONLINE,
 POWER_SUPPLY_PROP_AUTHENTIC,
 POWER_SUPPLY_PROP_TECHNOLOGY,
 POWER_SUPPLY_PROP_CYCLE_COUNT,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_VOLTAGE_MAX,
 POWER_SUPPLY_PROP_VOLTAGE_MIN,
 POWER_SUPPLY_PROP_VOLTAGE_MAX_DESIGN,
 POWER_SUPPLY_PROP_VOLTAGE_MIN_DESIGN,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_VOLTAGE_NOW,
 POWER_SUPPLY_PROP_VOLTAGE_AVG,
 POWER_SUPPLY_PROP_VOLTAGE_OCV,
 POWER_SUPPLY_PROP_CURRENT_MAX,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_CURRENT_NOW,
 POWER_SUPPLY_PROP_CURRENT_AVG,
 POWER_SUPPLY_PROP_POWER_NOW,
 POWER_SUPPLY_PROP_POWER_AVG,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_CHARGE_FULL_DESIGN,
 POWER_SUPPLY_PROP_CHARGE_EMPTY_DESIGN,
 POWER_SUPPLY_PROP_CHARGE_FULL,
 POWER_SUPPLY_PROP_CHARGE_EMPTY,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_CHARGE_NOW,
 POWER_SUPPLY_PROP_CHARGE_AVG,
 POWER_SUPPLY_PROP_CHARGE_COUNTER,
 POWER_SUPPLY_PROP_CONSTANT_CHARGE_CURRENT,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_CONSTANT_CHARGE_CURRENT_MAX,
 POWER_SUPPLY_PROP_CONSTANT_CHARGE_VOLTAGE,
 POWER_SUPPLY_PROP_CONSTANT_CHARGE_VOLTAGE_MAX,
 POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_CHARGE_CONTROL_LIMIT_MAX,
 POWER_SUPPLY_PROP_ENERGY_FULL_DESIGN,
 POWER_SUPPLY_PROP_ENERGY_EMPTY_DESIGN,
 POWER_SUPPLY_PROP_ENERGY_FULL,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_ENERGY_EMPTY,
 POWER_SUPPLY_PROP_ENERGY_NOW,
 POWER_SUPPLY_PROP_ENERGY_AVG,
 POWER_SUPPLY_PROP_CAPACITY,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_CAPACITY_ALERT_MIN,
 POWER_SUPPLY_PROP_CAPACITY_ALERT_MAX,
 POWER_SUPPLY_PROP_CAPACITY_LEVEL,
 POWER_SUPPLY_PROP_TEMP,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_TEMP_ALERT_MIN,
 POWER_SUPPLY_PROP_TEMP_ALERT_MAX,
 POWER_SUPPLY_PROP_TEMP_AMBIENT,
 POWER_SUPPLY_PROP_TEMP_AMBIENT_ALERT_MIN,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_TEMP_AMBIENT_ALERT_MAX,
 POWER_SUPPLY_PROP_TIME_TO_EMPTY_NOW,
 POWER_SUPPLY_PROP_TIME_TO_EMPTY_AVG,
 POWER_SUPPLY_PROP_TIME_TO_FULL_NOW,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_TIME_TO_FULL_AVG,
 POWER_SUPPLY_PROP_TYPE,
 POWER_SUPPLY_PROP_SCOPE,
 POWER_SUPPLY_PROP_USB_HC,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_USB_OTG,
 POWER_SUPPLY_PROP_CHARGE_ENABLED,
 POWER_SUPPLY_PROP_MODEL_NAME,
 POWER_SUPPLY_PROP_MANUFACTURER,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_PROP_SERIAL_NUMBER,
};
enum power_supply_type {
 POWER_SUPPLY_TYPE_UNKNOWN = 0,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_TYPE_BATTERY,
 POWER_SUPPLY_TYPE_UPS,
 POWER_SUPPLY_TYPE_MAINS,
 POWER_SUPPLY_TYPE_USB,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 POWER_SUPPLY_TYPE_USB_DCP,
 POWER_SUPPLY_TYPE_USB_CDP,
 POWER_SUPPLY_TYPE_USB_ACA,
};
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
union power_supply_propval {
 int intval;
 const char *strval;
};
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
struct power_supply {
 const char *name;
 enum power_supply_type type;
 enum power_supply_property *properties;
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 size_t num_properties;
 char **supplied_to;
 size_t num_supplicants;
 char **supplied_from;
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 size_t num_supplies;
 int (*get_property)(struct power_supply *psy,
 enum power_supply_property psp,
 union power_supply_propval *val);
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 int (*set_property)(struct power_supply *psy,
 enum power_supply_property psp,
 const union power_supply_propval *val);
 int (*property_is_writeable)(struct power_supply *psy,
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 enum power_supply_property psp);
 void (*external_power_changed)(struct power_supply *psy);
 void (*set_charged)(struct power_supply *psy);
 int use_for_apm;
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 struct device *dev;
 spinlock_t changed_lock;
 bool changed;
};
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
struct power_supply_info {
 const char *name;
 int technology;
 int voltage_max_design;
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 int voltage_min_design;
 int charge_full_design;
 int charge_empty_design;
 int energy_full_design;
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
 int energy_empty_design;
 int use_for_apm;
};
#endif
/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
